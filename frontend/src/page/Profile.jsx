import React, { useEffect, useState } from "react";
import { LineChart, Line, XAxis, YAxis, Tooltip, Legend, CartesianGrid } from "recharts";

const API = process.env.REACT_APP_API_URL || "http://localhost:5000";

export default function Profile() {
  const [activeTab, setActiveTab] = useState("psqi");
  const [viewMode, setViewMode] = useState("7days"); // "7days" ‡∏´‡∏£‡∏∑‡∏≠ "weekly"
  const [diaries, setDiaries] = useState([]);
  const [loading, setLoading] = useState(true);

  const user = JSON.parse(localStorage.getItem("authUser"));
  const userId =
    user?._id || user?.id || user?.user?._id || user?.user?.id || null;

  useEffect(() => {
    const fetchDiaries = async () => {
      try {
        const res = await fetch(`${API}/api/diary?userId=${userId}`);
        const data = await res.json();
        setDiaries(data.slice(-30).reverse());
      } catch (err) {
        console.error("‚ùå Error fetching diaries:", err);
      } finally {
        setLoading(false);
      }
    };
    if (userId) fetchDiaries();
    else setLoading(false);
  }, [userId]);

  if (loading) return <p>‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</p>;

  // üßÆ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå
  const getWeeklyData = () => {
    if (!diaries.length) return [];
    const groups = {};
    diaries.forEach((d) => {
      if (!d.date) return;
      const date = new Date(d.date);
      const weekKey = `${date.getFullYear()}-W${Math.ceil(date.getDate() / 7)}`;
      if (!groups[weekKey]) groups[weekKey] = [];
      groups[weekKey].push(d);
    });

    return Object.entries(groups).map(([week, entries]) => {
      const avgSleep =
        entries.reduce((s, e) => s + (e.totalSleepTime || 0), 0) /
        entries.length;
      const avgQuality =
        entries.reduce((s, e) => s + (e.sleepQuality || 0), 0) /
        entries.length;
      return { week, avgSleep, avgQuality };
    });
  };

  const weeklyData = getWeeklyData();

  // üí¨ Feedback ‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô
  const generateDailyFeedback = () => {
    const last7 = diaries.slice(-7);
    if (!last7.length) return "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á 7 ‡∏ß‡∏±‡∏ô";

    const avgSleep =
      last7.reduce((sum, d) => sum + (d.totalSleepTime || 0), 0) / last7.length;
    const avgQuality =
      last7.reduce((sum, d) => sum + (d.sleepQuality || 0), 0) / last7.length;
    const avgRefreshed =
      last7.reduce((sum, d) => sum + (d.refreshed || 0), 0) / last7.length;

    let fb = "";

    if (avgSleep < 6)
      fb +=
        "‚è∞ ‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á 7 ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏°‡∏≤ ‡∏Ñ‡∏∏‡∏ì‡∏ô‡∏≠‡∏ô‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ 6 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á ‡∏Ñ‡∏ß‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏≠‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏£‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏¢‡∏ü‡∏∑‡πâ‡∏ô‡∏ï‡∏±‡∏ß\n";
    else if (avgSleep < 7)
      fb +=
        "üåô ‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏≠‡∏ô‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì 6‚Äì7 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á ‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡∏û‡∏≠‡πÉ‡∏ä‡πâ ‡πÅ‡∏ï‡πà‡∏Ñ‡∏ß‡∏£‡∏ô‡∏≠‡∏ô‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö 7‚Äì8 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á\n";
    else fb += "üò¥ ‡∏Ñ‡∏∏‡∏ì‡∏ô‡∏≠‡∏ô‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ô‡∏µ‡πâ ‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°‡∏°‡∏≤‡∏Å!\n";

    if (avgQuality < 3)
      fb +=
        "üí§ ‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏Å‡∏≤‡∏£‡∏ô‡∏≠‡∏ô‡∏Ñ‡πà‡∏≠‡∏ô‡∏Ç‡πâ‡∏≤‡∏á‡∏ï‡πà‡∏≥ ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏•‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡∏Å‡πà‡∏≠‡∏ô‡∏ô‡∏≠‡∏ô‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏´‡πâ‡∏≠‡∏á‡πÉ‡∏´‡πâ‡∏°‡∏∑‡∏î‡πÄ‡∏á‡∏µ‡∏¢‡∏ö\n";
    else if (avgQuality < 4)
      fb +=
        "üõèÔ∏è ‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏Å‡∏≤‡∏£‡∏ô‡∏≠‡∏ô‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á ‡∏•‡∏≠‡∏á‡∏ù‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏´‡∏≤‡∏¢‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡∏ü‡∏±‡∏á‡πÄ‡∏û‡∏•‡∏á‡∏ú‡πà‡∏≠‡∏ô‡∏Ñ‡∏•‡∏≤‡∏¢‡∏Å‡πà‡∏≠‡∏ô‡∏ô‡∏≠‡∏ô\n";
    else fb += "üåü ‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏Å‡∏≤‡∏£‡∏ô‡∏≠‡∏ô‡∏î‡∏µ‡∏°‡∏≤‡∏Å ‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏û‡∏§‡∏ï‡∏¥‡∏Å‡∏£‡∏£‡∏°‡∏ô‡∏µ‡πâ‡∏ï‡πà‡∏≠‡πÑ‡∏õ!\n";

    if (avgRefreshed < 3)
      fb +=
        "‚òÄÔ∏è ‡∏Ñ‡∏∏‡∏ì‡∏°‡∏±‡∏Å‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡πÑ‡∏°‡πà‡∏™‡∏î‡∏ä‡∏∑‡πà‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏ï‡∏∑‡πà‡∏ô ‡∏•‡∏≠‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏≠‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏Ñ‡∏≤‡πÄ‡∏ü‡∏≠‡∏µ‡∏ô‡∏´‡∏•‡∏±‡∏á 18:00 ‡∏ô.\n";

    return fb.trim();
  };

  // üí¨ Feedback ‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå
  const generateWeeklyFeedback = () => {
    if (!weeklyData.length) return "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå";

    const latestWeek = weeklyData[weeklyData.length - 1];
    let fb = `üìÖ ‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î (${latestWeek.week})\n`;

    if (latestWeek.avgSleep < 6)
      fb += "‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏≠‡∏ô‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ï‡πà‡∏≥‡∏Å‡∏ß‡πà‡∏≤ 6 ‡∏ä‡∏°. ‡∏Ñ‡∏ß‡∏£‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏≠‡∏ô‡πÉ‡∏´‡πâ‡πÄ‡∏£‡πá‡∏ß‡∏Ç‡∏∂‡πâ‡∏ô\n";
    else if (latestWeek.avgSleep < 7)
      fb += "üåô ‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏≠‡∏ô‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏û‡∏≠‡πÉ‡∏ä‡πâ ‡πÅ‡∏ï‡πà‡∏Ñ‡∏ß‡∏£‡∏ô‡∏≠‡∏ô‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö 7‚Äì8 ‡∏ä‡∏°. ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏î‡∏ä‡∏∑‡πà‡∏ô\n";
    else fb += "üò¥ ‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏≠‡∏ô‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏î‡∏µ‡∏°‡∏≤‡∏Å! ‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏û‡∏§‡∏ï‡∏¥‡∏Å‡∏£‡∏£‡∏°‡∏Å‡∏≤‡∏£‡∏ô‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏ï‡πà‡∏≠‡πÑ‡∏õ\n";

    if (latestWeek.avgQuality < 3)
      fb +=
        "üí§ ‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏Å‡∏≤‡∏£‡∏ô‡∏≠‡∏ô‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏ï‡πà‡∏≥ ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡∏•‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ñ‡∏£‡∏µ‡∏¢‡∏î‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏†‡∏≤‡∏û‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏°‡∏ó‡∏µ‡πà‡∏™‡∏á‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡∏ô‡∏≠‡∏ô\n";
    else if (latestWeek.avgQuality < 4)
      fb += "üõå ‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏Å‡∏≤‡∏£‡∏ô‡∏≠‡∏ô‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÑ‡∏î‡πâ‡∏≠‡∏µ‡∏Å‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢\n";
    else fb += "üåü ‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏Å‡∏≤‡∏£‡∏ô‡∏≠‡∏ô‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏î‡∏µ‡∏°‡∏≤‡∏Å‡πÉ‡∏ô‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ô‡∏µ‡πâ!\n";

    return fb.trim();
  };

  // ======== üéØ PSQI ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡πà‡∏≠‡∏ô‡πÅ‡∏•‡∏∞‡∏´‡∏•‡∏±‡∏á ========
  const psqiData = [
    { name: "‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô (Pre)", score: 13 },
    { name: "‡∏´‡∏•‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô (Post)", score: 8 },
  ];

  // ======== UI ========
  return (
    <div className="p-6 max-w-4xl mx-auto">
      <h1 className="text-2xl font-bold mb-6 text-center">üë§ ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</h1>

      {/* ‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏•‡∏±‡∏ö‡πÅ‡∏ó‡πá‡∏ö‡∏´‡∏•‡∏±‡∏Å */}
      <div className="flex justify-center mb-6 space-x-4">
        <button
          onClick={() => setActiveTab("psqi")}
          className={`px-6 py-2 rounded-lg font-medium ${
            activeTab === "psqi"
              ? "bg-indigo-500 text-white"
              : "bg-gray-200 text-gray-700 hover:bg-gray-300"
          }`}
        >
          üìã ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô PSQI
        </button>

        <button
          onClick={() => setActiveTab("sleep")}
          className={`px-6 py-2 rounded-lg font-medium ${
            activeTab === "sleep"
              ? "bg-indigo-500 text-white"
              : "bg-gray-200 text-gray-700 hover:bg-gray-300"
          }`}
        >
          üõå Sleep Diary
        </button>
      </div>

      {/* ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ */}
      {activeTab === "psqi" ? (
        <div className="bg-white p-6 rounded-xl shadow-md text-center">
          <h2 className="text-xl font-semibold mb-4">üìã ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô PSQI</h2>

          <p className="text-gray-700 mb-4">
            ‡∏Ñ‡πà‡∏≤ PSQI (Pittsburgh Sleep Quality Index) ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏Å‡∏≤‡∏£‡∏ô‡∏≠‡∏ô  
            ‡πÇ‡∏î‡∏¢‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ô‡πâ‡∏≠‡∏¢‡∏•‡∏á‡∏´‡∏°‡∏≤‡∏¢‡∏ñ‡∏∂‡∏á‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏Å‡∏≤‡∏£‡∏ô‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô
          </p>

          {/* ‚úÖ ‡∏Å‡∏£‡∏≤‡∏ü‡πÄ‡∏™‡πâ‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏Å‡πà‡∏≠‡∏ô‚Äì‡∏´‡∏•‡∏±‡∏á */}
          <div className="bg-gray-50 p-4 rounded-xl shadow-inner mb-6">
            <h3 className="text-lg font-semibold mb-3 text-center text-indigo-700">
              üìà ‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô PSQI ‡∏Å‡πà‡∏≠‡∏ô‚Äì‡∏´‡∏•‡∏±‡∏á
            </h3>
            <LineChart width={600} height={300} data={psqiData}>
              <CartesianGrid strokeDasharray="3 3" />
              <XAxis dataKey="name" />
              <YAxis domain={[0, 21]} />
              <Tooltip />
              <Legend />
              <Line
                type="monotone"
                dataKey="score"
                stroke="#4f46e5"
                strokeWidth={3}
                dot={{ r: 6 }}
                name="‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô PSQI"
              />
            </LineChart>
          </div>

          {/* üîç ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏• */}
          <p className="text-lg text-gray-800">
            üìä ‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô: <b>13</b> ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô &nbsp; ‚Üí &nbsp; ‡∏´‡∏•‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô: <b>8</b> ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô
          </p>
          <p className="text-green-700 font-semibold mt-2">
            ‚úÖ ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏•‡∏î‡∏•‡∏á ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏Å‡∏≤‡∏£‡∏ô‡∏≠‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏£‡∏∞‡∏ö‡∏ö
          </p>
        </div>
      ) : (
        <div>
          {/* ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤ */}
          <div className="flex justify-center mb-6 space-x-3">
            <button
              onClick={() => setViewMode("7days")}
              className={`px-5 py-2 rounded-lg font-medium ${
                viewMode === "7days"
                  ? "bg-blue-600 text-white"
                  : "bg-gray-300 text-gray-800 hover:bg-gray-400"
              }`}
            >
              üìÜ 7 ‡∏ß‡∏±‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
            </button>
            <button
              onClick={() => setViewMode("weekly")}
              className={`px-5 py-2 rounded-lg font-medium ${
                viewMode === "weekly"
                  ? "bg-green-600 text-white"
                  : "bg-gray-300 text-gray-800 hover:bg-gray-400"
              }`}
            >
              üìÖ ‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå
            </button>
          </div>

          {/* ======= ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏≤‡∏°‡πÇ‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ======= */}
          {viewMode === "7days" ? (
            <>
              {/* ‡∏Å‡∏£‡∏≤‡∏ü‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô */}
              <div className="bg-white p-4 rounded-xl shadow-md mb-4">
                <h2 className="text-2xl font-bold mb-4 text-center">
                  üìä ‡∏Å‡∏£‡∏≤‡∏ü‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á 7 ‡∏ß‡∏±‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
                </h2>
                <LineChart width={600} height={300} data={diaries.slice(-7)}>
                  <XAxis dataKey="date" />
                  <YAxis />
                  <Tooltip />
                  <Legend />
                  <Line
                    type="monotone"
                    dataKey="totalSleepTime"
                    stroke="#6366f1"
                    name="‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏≠‡∏ô (‡∏ä‡∏°.)"
                  />
                  <Line
                    type="monotone"
                    dataKey="sleepQuality"
                    stroke="#16a34a"
                    name="‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏Å‡∏≤‡∏£‡∏ô‡∏≠‡∏ô"
                  />
                </LineChart>
              </div>

              {/* Feedback ‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô */}
              <div className="bg-blue-500 text-white p-5 rounded-xl shadow-lg mb-8 border border-blue-200">
                <h3 className="text-lg font-semibold mb-2 text-center">
                  üí¨ Feedback (7 ‡∏ß‡∏±‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î)
                </h3>
                <pre className="whitespace-pre-wrap text-sm leading-relaxed">
                  {generateDailyFeedback()}
                </pre>
              </div>
            </>
          ) : (
            <>
              {/* ‡∏Å‡∏£‡∏≤‡∏ü‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå */}
              <div className="bg-white p-4 rounded-xl shadow-md mb-4">
                <h2 className="text-2xl font-bold mb-4 text-center">
                  üìÖ ‡∏Å‡∏£‡∏≤‡∏ü‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏Å‡∏≤‡∏£‡∏ô‡∏≠‡∏ô‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå
                </h2>
                <LineChart width={600} height={300} data={weeklyData}>
                  <XAxis dataKey="week" />
                  <YAxis />
                  <Tooltip />
                  <Legend />
                  <Line
                    type="monotone"
                    dataKey="avgSleep"
                    stroke="#3b82f6"
                    name="‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏≠‡∏ô‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢ (‡∏ä‡∏°.)"
                  />
                  <Line
                    type="monotone"
                    dataKey="avgQuality"
                    stroke="#10b981"
                    name="‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢"
                  />
                </LineChart>
              </div>

              {/* Feedback ‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå */}
              <div className="bg-green-500 text-white p-5 rounded-xl shadow-lg mb-8 border border-green-200">
                <h3 className="text-lg font-semibold mb-2 text-center">
                  üí¨ Feedback (‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå)
                </h3>
                <pre className="whitespace-pre-wrap text-sm leading-relaxed">
                  {generateWeeklyFeedback()}
                </pre>
              </div>
            </>
          )}
        </div>
      )}
    </div>
  );
}
